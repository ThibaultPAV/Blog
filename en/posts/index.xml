<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on NeuroFab</title>
    <link>https://thibaultpav.github.io/Blog/en/posts/</link>
    <description>Recent content in Posts on NeuroFab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://thibaultpav.github.io/Blog/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Key Concepts of Reinforcement Learning: What You Need to Know</title>
      <link>https://thibaultpav.github.io/Blog/en/posts/introduction_rl/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://thibaultpav.github.io/Blog/en/posts/introduction_rl/</guid>
      
      <description>&lt;p&gt;&lt;strong&gt;üåç Imagine a world where machines learn to make decisions, adjusting their strategies over time to achieve specific goals. This world is no longer a mere vision of the future, but a reality, thanks in large part to Reinforcement Learning (RL).&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re curious about how this technology works, you&amp;rsquo;re in the right place. In this article, I will explain in a simple and clear manner the essential concepts of RL, an artificial intelligence technique that allows machines to learn independently, without supervision.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Q-learning</title>
      <link>https://thibaultpav.github.io/Blog/en/posts/q_learning/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://thibaultpav.github.io/Blog/en/posts/q_learning/</guid>
      
      <description>&lt;p&gt;Now that we have understood the basics of temporal difference methods (&lt;a href=&#34;https://thibaultpav.github.io/Blog/Blog/en/posts/introduction_rl/&#34;&gt;introduction_Rl&lt;/a&gt;), let‚Äôs move on to one of the most well-known methods in reinforcement learning: Q-learning. üòÉ&lt;/p&gt;
&lt;p&gt;To better grasp how it works, we will first introduce the Q-learning algorithm and then put it into practice in a video game environment called Frozen Lake. The codes and examples we will use will be available on GitHub for you to check out and try yourself.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
